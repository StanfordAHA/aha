#!/usr/bin/env bash
set +u

# Here be secrets! This file must be read-protected against outside eyes!
function get_token {
    owner=`echo $OWNER | tr '[:upper:]' '[:lower:]'`
    case "$owner" in
        stanfordaha) echo 'REDACTED!'; return ;;
        leonardt) echo 'REDACTED!'; return ;;
        cdonovick) echo 'REDACTED!'; return ;;
        kuree) echo 'REDACTED!'; return ;;
    esac
}

USAGE="

  USAGE:
    export BUILDKITE_BUILD_NUMBER=8478
    export BUILDKITE_PULL_REQUEST_REPO='https://github.com/StanfordAHA/garnet.git'
    export BUILDKITE_COMMIT=45dead...
    $0 [ --force ] <status>

  DESCRIPTION:
    We check BUILDKITE EXIT_STATUS env vars to detect actual build status,
    If build status is nonzero, send 'failure' status to github.
    Otherwise, send requested <status>, which must be one of {pending,success,failure}.

    --------------------------------------------------------
    BuildStatus  RequestedStatus   SendGitHub    ExitCode
    --------------------------------------------------------
     zero/GOOD       pending         pending         0
     zero/GOOD       success         success         0
     zero/GOOD       failure         failure         0

    nonzero/BAD                      failure    BuildStatus (unless --force)
    --------------------------------------------------------

    '--force' option overrides nonzero/BAD behavior and sends requested status unchanged.

  EXAMPLES:
    $0 --force pending
    $0 success
"

# Update env with latest pull-request info
# BUILDKITE_PULL_REQUEST_REPO, BUILDKITE_PULL_REQUEST
temp=/var/lib/buildkite-agent/builds/DELETEME
env=$temp/env-${BUILDKITE_BUILD_NUMBER}
test -e $env && source $env

# Only need status updates if BUILDKITE_PULL_REQUEST_REPO is valid
if ! [ "$BUILDKITE_PULL_REQUEST_REPO" ]; then
    echo "Not a pull request, not doin' nothin'"
    exit 0
fi
if [ "$1" == "--help" ]; then echo "$USAGE"; exit; fi
if [ "$1" == "--force" ]; then
    BUILDKITE_LAST_HOOK_EXIT_STATUS=0
    BUILDKITE_COMMAND_EXIT_STATUS=0
    shift
fi
if [ "$#" != "1" ];      then echo "$USAGE"; exit; fi

buildno=$BUILDKITE_BUILD_NUMBER
repo=$BUILDKITE_PULL_REQUEST_REPO
SHA=$BUILDKITE_COMMIT
status=$1


# Extract info from repo url
# E.g. repo="https://github.com/stanfordaha/garnet" => OWNER=stanfordaha, REPO="garnet"

# Cleanup in case repo is e.g. "https://github.com/StanfordAHA/garnet.git"
repo=`echo $repo | sed 's/[.]git//'`

OWNER=`echo $repo | awk -F '/' '{print $(NF-1)}'`
REPO=`echo $repo | awk -F '/' '{print $NF}'`
TOKEN=`get_token $OWNER`

if ! [ "$TOKEN" ]; then
    echo "ERROR do not have a token for 'github.com/$OWNER'"; exit 13
fi

# Additionally, a combined state is returned. The state is one of:
# 
#     failure if any of the contexts report as error or failure
#     pending if there are no statuses or a context is pending
#     success if the latest status for all contexts is success

# Use buildkite EXIT_STATUS vars to determine success or failure.
# If failure, override requested status and exit with nonzero code.

exit_code=0
s1=$BUILDKITE_LAST_HOOK_EXIT_STATUS; echo "BUILDKITE_LAST_HOOK_EXIT_STATUS=$s1"
s2=$BUILDKITE_COMMAND_EXIT_STATUS;   echo "BUILDKITE_COMMAND_EXIT_STATUS=$s2"

if   [ "$s1" != "0" ]; then
  echo "+++ ERROR Hooks failed with exit status '$s1'"
  status="failure"; [ "$s1" ] && exit_code=$s1 || exit_code=13
elif [ "$s2" != "0" ]; then
  echo "+++ ERROR Commands failed with exit status '$s2'"
  status="failure"; [ "$s2" ] && exit_code=$s2 || exit_code=13
fi
echo "exit code=$exit_code"

# https://docs.github.com/en/rest/commits/statuses?apiVersion=2022-11-28

state="\"state\":\"$status\""

if [ "$status" == "pending" ]; then
    description="\"description\":\"Build #$buildno started\""
elif [ "$status" == "success" ]; then
    description="\"description\":\"Build #$buildno passed\""
elif [ "$status" == "failure" ]; then
    description="\"description\":\"Build #$buildno failed\""
else
    echo "ERROR status must be one of {pending,success,failure}"; exit 13
fi
target_url="\"target_url\":\"https://buildkite.com/stanford-aha/aha-flow/builds/$buildno\""
context='"context":"buildkite/aha-flow"'

echo "Sending status '$status' to 'https://api.github.com/repos/$OWNER/$REPO/statuses/$SHA'"

curl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer $TOKEN" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/$OWNER/$REPO/statuses/$SHA \
  -d "{$state,$target_url,$description,$context}" |& head

exit $exit_code
