env:
  WIDTH: 16
  HEIGHT: 16

steps:
- label: ":wrench: Build Docker Image"
  key: "docker-build"
  commands:
  - echo "--- Handle PR"
  - if [[ $$FLOW_REPO ]]; then
      cd $FLOW_REPO && git fetch && git checkout $FLOW_HEAD_SHA && cd - ;
    fi
  - echo "--- Creating garnet Image"
  - docker build . -t "garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA"
  - echo "--- Pruning Docker Images"
  - yes | docker image prune -a --filter "until=6h" --filter=label='description=garnet'
  agents:
    docker: true
  
- label: ":hammer: Integration Tests"
  key: "integration-tests"
  depends_on: "docker-build"
  commands:
  - source /cad/modules/tcl/init/sh
  - module load base incisive
  - ls /aha
  - echo "--- Generating Garnet"
  - aha garnet --width $$WIDTH --height $$HEIGHT --verilog --interconnect-only
  - echo "--- Compiling App"
  - aha halide tests/conv_1_2
  - echo "--- Mapping App"
  - aha map tests/conv_1_2 --width $$WIDTH --height $$HEIGHT
  - echo "--- Running Test"
  - aha test tests/conv_1_2
  # We need to clean out the docker workdir because files in docker
  # have root permissions, and the workdir is a mapped volume so the
  # next buildkite job in that directory will fail because it couldn't
  # remove the existing files.
  - rm -rf /aha/*
  plugins:
    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA
        volumes:
          - "/cad/:/cad"
        mount-checkout: false
        propagate-environment: true
        environment:
          - WIDTH
          - HEIGHT
        shell: ["/bin/bash", "-e", "-c"]
  agents:
    docker: true

- label: ":skull_and_crossbones: Delete Docker Image"
  depends_on: "integration-tests"
  commands:
  # '--no-prune' so it doesn't prune dangling images, we want to use
  # them for the Docker cache.
  - docker image rm "garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA" --no-prune
  agents:
    docker: true
