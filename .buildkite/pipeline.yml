env:
  CONFIG: ${CONFIG:-daily}

steps:

# This first step builds the docker image that gets used by all subsequent steps.
- label: ":wrench: Build Docker Image"
  key: "docker-build"
  agents:
    docker: true

  plugins:
  # Override standard checkout procedure with custom checkout script
  - uber-workflow/run-without-clone:
  - improbable-eng/metahook:

      # Must clone aha repo in the pre-checkout phase,
      # so repo-based post-checkout hook will be ready for post-checkout phase.

      pre-checkout: |
        echo "+++ PRE CHECKOUT HOOK, BDI STEP, BEGIN"
        
        echo "+++ CD to aha repo clone"; set -x
        if ! test -e $$BUILDKITE_BUILD_CHECKOUT_PATH/.git; then
            echo "No aha clone in checkout dir (yet); I will build one"
            mkdir -p $$BUILDKITE_BUILD_CHECKOUT_PATH
            git clone $$BUILDKITE_REPO $$BUILDKITE_BUILD_CHECKOUT_PATH
        fi
        cd $$BUILDKITE_BUILD_CHECKOUT_PATH
        echo 'git checkout $$BUILDKITE_COMMIT || git checkout remotes/origin/no-heroku'; set -x
              git checkout $$BUILDKITE_COMMIT || git checkout remotes/origin/no-heroku
        set +x

        echo "--- DEBUG DOCKER TRASH"; set -x
        docker images; docker ps
        # docker kill deleteme_garnet_ci4114 || echo okay
        set +x

        echo "--- CHECKOUT FULL REPO, submodules and all"
        source .buildkite/bin/custom-checkout.sh

        echo "--- PRE CHECKOUT HOOK, BDI STEP, END"

  commands:

  - echo "--- pipeline.xml commands BEGIN"

  # The "if FLOW_REPO" part is redundant when/if not using heroku...?
  - echo FLOW_REPO=$$FLOW_REPO
  - echo FLOW_REPO=$FLOW_REPO
  - 'set -x;
     pwd;
     if test -e tmp-vars; then
       cat -n tmp-vars;
       source tmp-vars;
     fi;
     if [[ $$FLOW_REPO ]]; then
       echo "--- Handle PR";
       cd $FLOW_REPO && git fetch && git checkout $FLOW_HEAD_SHA;
     fi'
 
  # !!!
  - echo "+++ debug BEGIN"

#   - source .buildkite/hooks/post-checkout

  # Note, from here down, FLOW_REPO and FLOW_HEAD_SHA are null
  # if not called via heroku (I think)

  - echo "--- Creating garnet Image"
  - docker build . -t "garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA"
  # Clear out .TEST file to avoid reporting failure to aha-flow-app.
  # This is a heroku thing I guess.
  # FIXME remove heroku, remove this, along with pre-exit and post-checkout hooks
  - rm -rf temp/.TEST

  - echo "--- Pruning Docker Images"
  - yes | docker image prune -a --filter "until=6h" --filter=label='description=garnet' || true

  - echo "--- pipeline.xml commands END"


- label: ":hammer: Amber Gold RTL"
  key: "goldcheck-amber"
  depends_on: "docker-build"
  commands:
  - set -x; echo "+++ EARLY OUT foooool"; exit 0
  - set -x; /aha/aha/bin/rtl-goldcheck.sh amber
  plugins:
    # - thedyrt/skip-checkout#v0.1.1: ~
    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA
        # image: stanfordaha/garnet:latest
        volumes:
          - "/cad/:/cad"
          - "./temp:/buildkite:rw"
        skip-checkout: true
        mount-checkout: false
        propagate-environment: true
        environment:
          - CONFIG
          - FLOW_REPO
        shell: ["/bin/bash", "-e", "-c"]
  agents:
    docker: true


- label: ":hammer: Onyx Integration Tests"
  key: "integration-tests"
  depends_on: "docker-build"
  commands:

# TEST to see if failure canary works?

#   # Disabled checkout so maybe .buildkite/hooks/post-checkout not guaranteed to exist
#   # So must embed functionality here instead :/

# VERY BAD! This creates a root-owned unremovable dir 'temp' in the host machine :(
#   - mkdir -p /buildkite/temp; rm -rf /buildkite/temp/.TEST; touch /buildkite/temp/.TEST
  
  # - docker images; docker ps; sleep 500; exit 0
  - source /aha/bin/activate
  - source /cad/modules/tcl/init/sh
  - module load base incisive xcelium/19.03.003 vcs/Q-2020.03-SP2
  # make /bin/sh symlink to bash instead of dash:
  - echo "dash dash/sh boolean false" | debconf-set-selections
  - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
  - apt update
  - apt install time
  - ls /aha
  - pip freeze
  - (cd garnet && echo "garnet" && git rev-parse --verify HEAD)
  # Run regression tests
  - if [[ $$FLOW_REPO ]]; then
      export CONFIG=pr;
    fi
  - aha regress $$CONFIG
  # We report success to the aha-flow app by removing the .TEST file,
  # which is created in the post-checkout hook and checked for in the
  # pre-exit hook.

  - echo "--- Removing Failure Canary"
  - ls -al /buildkite
  - rm -rf /buildkite/.TEST
  - ls -al /buildkite

  - exit 0

# need to run post-checkout and pre-exit hooks even though did not checkout aha repo
  # ONYX INTEGRATION TESTS
  plugins:
    - uber-workflow/run-without-clone:
    - improbable-eng/metahook:

        pre-checkout: |
          set +x
          echo "+++ PRE CHECKOUT HOOK, OIT STEP BEGIN"

          echo "+++ CD to aha repo clone"; set -x
          if ! test -e $$BUILDKITE_BUILD_CHECKOUT_PATH/.git; then
            echo "No aha clone in checkout dir (yet); I will build one"
            mkdir -p $$BUILDKITE_BUILD_CHECKOUT_PATH
            git clone $$BUILDKITE_REPO $$BUILDKITE_BUILD_CHECKOUT_PATH
          fi
          cd $$BUILDKITE_BUILD_CHECKOUT_PATH
          echo 'git checkout $$BUILDKITE_COMMIT || git checkout remotes/origin/no-heroku'; set -x
                git checkout $$BUILDKITE_COMMIT || git checkout remotes/origin/no-heroku
          set +x

          echo "--- PRE CHECKOUT HOOK, OIT STEP END"

        pre-command: |
          set -x
          echo "+++ DEBUG POST-CHECKOUT HOOK, OIT STEP"
          date; pwd; ls -l .buildkite/hooks/post-checkout || echo no thats okay
          aha=/var/lib/buildkite-agent/builds/$$BUILDKITE_AGENT_NAME/stanford-aha/aha-flow
          ls -l $$aha/.buildkite/hooks/post-checkout || echo no thats okay
          ls -l $$aha || echo no thats okay

          # Once I got a message "Process working directory $$aha doesn't exist"(!)
          ls -l $$aha || mkdir -p $$aha

          # Already did this in prev step??
          # echo "+++ DEBUG DOCKER TRASH"
          # docker images; docker ps
          # docker kill deleteme_garnet_ci3927

    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA
        # image: stanfordaha/garnet:latest
        volumes:
          - "/cad/:/cad"
          - "./temp:/buildkite:rw"
        mount-checkout: false
        skip-checkout: true
        propagate-environment: true
        environment:
          - CONFIG
          - FLOW_REPO
        shell: ["/bin/bash", "-e", "-c"]
  agents:
    docker: true

# FIXME does docker image get removed even when dependence(s) fail?
- label: ":skull_and_crossbones: Delete Docker Image"
  depends_on:
  - "integration-tests"
  - "goldcheck-amber"
  commands:
  # '--no-prune' so it doesn't prune dangling images, we want to use
  # them for the Docker cache.
  - docker image rm "garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA" --no-prune
  agents:
    docker: true
  plugins:
  - uber-workflow/run-without-clone:
# - thedyrt/skip-checkout#v0.1.1: ~


########################################################################
# OLD
#   - echo "+++ debug BEGIN"
#   - echo '------------------------------------------------------------------------'
#   - ls -ld /var/lib/buildkite-agent/builds/r7cad-docker-[12345678]/stanford-aha/aha-flow/temp || echo nope
#   - echo '------------------------------------------------------------------------'
#   - ls -1 /var/lib/buildkite-agent/builds/r7cad-docker-[12345678]/stanford-aha/aha-flow/.buildkite/hooks/post-checkout || echo nope
#   - echo '------------------------------------------------------------------------'
#   - pwd
#   - echo '------------------------------------------------------------------------'
#   - ls -ld .buildkite/hooks || echo nope
#   - echo '------------------------------------------------------------------------'
#   - ls -l .buildkite/hooks || echo nope
#   - echo '------------------------------------------------------------------------'
#   - echo "--- debug END"
# 
#   - echo "--- successed or not i dunno"
#   - exit 13

#       pre-checkout: |
#         aha=/var/lib/buildkite-agent/builds/$$BUILDKITE_AGENT_NAME/stanford-aha/aha-flow
#         ls -ld $$aha || echo no
#         ls -ld $$aha/temp || echo no
#         ls -laR $$aha/temp || echo no

# - thedyrt/skip-checkout#v0.1.1: ~
#   - sv-oss/github-pr-labels#v0.0.2:
#       publish-env-var: PULL_REQUEST_LABELS

#   - matrix-org/download#v1.1.0:
#       urls:
#         - https://raw.githubusercontent.com/StanfordAHA/garnet/aha-flow-no-heroku/TEMP/custom-checkout.sh
#   - SpencerSharkey/hooks:
#       precommand: $${BUILDKITE_DOWNLOADS_PATH}/custom-checkout.sh

#     - matrix-org/download#v1.1.0:
#         urls:
#           - https://raw.githubusercontent.com/StanfordAHA/garnet/aha-flow-no-heroku/TEMP/custom-checkout.sh
#     - SpencerSharkey/hooks:
#         precommand: $${BUILDKITE_DOWNLOADS_PATH}/custom-checkout.sh

    # - thedyrt/skip-checkout#v0.1.1: ~

#           tmp=/var/lib/buildkite-agent/builds/tmp/$$BUILDKITE_BUILD_NUMBER
#           [ "$$tmp" == "$MYTMP" ] || exit 13

#         echo "+++ where is custom-checkout? pc1"; set -x
#         ls -l $CHECKOUT || echo ERROR cannot find $CHECKOUT
# 
#         #         echo "Is /tmp reliable? And/or should curl from url?"
#         #         pwd; df -h $$MYTMP

#   - echo "+++ temporarily skipping this step"; set -x
#   - docker pull stanfordaha/garnet:latest
#   - exit 0
#   - echo foooooooo

        # ALWAYS build mytmp, then don't need upload-script (eventually)
        # MYTMP=/var/lib/buildkite-agent/builds/tmp/$BUILDKITE_BUILD_NUMBER
        # If MYTMP exists, we have valid clone from current build
        # if [ -e $CHECKOUT ]; then

        # NO MORE MYTMP!!!
        # 
        # 
        # #         if [ "" ]; then
        # #             # (If CHECKOUT exists, MYTMP exists.)
        # #             echo "Found pre-existing build clone, use that for checkout"
        # #             echo source $CHECKOUT; source $CHECKOUT
        # #         else
        # 
        #             echo "Build a new MYTMP (prev step built MYTMP on a different machine maybe)"
        #             set -x
        #             git clone $$BUILDKITE_REPO $MYTMP/aha-flow; cd $MYTMP/aha-flow
        #             git checkout $$BUILDKITE_COMMIT || git checkout remotes/origin/no-heroku
        #             set +x
        # 
        #             echo "Checkout full repo, submodules and all"
        #             source .buildkite/bin/custom-checkout.sh
        # 
        #             echo "Copy aha clone to checkout path so bk will find local post-checkout etc."
        #             mkdir -p $$BUILDKITE_BUILD_CHECKOUT_PATH
        #             shopt -s dotglob  # Else will not copy dotfiles e.g. .buildkite/hooks :o
        #             (cd $$BUILDKITE_BUILD_CHECKOUT_PATH; git clean -ffxdq)
        #             echo "cp -rfp $MYTMP/aha-flow/* $$BUILDKITE_BUILD_CHECKOUT_PATH"
        #                   cp -rfp $MYTMP/aha-flow/* $$BUILDKITE_BUILD_CHECKOUT_PATH

        # NO MORE MYTMP!!!


#       pre-command: |
#           echo "+++ DEBUG DOCKER TRASH BDI pre-comm"
#           set -x
#           #
#           # local post-checkout working as of build 8583
#           #           echo "+++ DEBUG POST-CHECKOUT HOOK"
#           #           date; pwd; ls -l .buildkite/hooks/post-checkout || echo no
#           #           aha=/var/lib/buildkite-agent/builds/$$BUILDKITE_AGENT_NAME/stanford-aha/aha-flow
#           #           ls -l $$aha/.buildkite/hooks/post-checkout || echo no
#           #
#           docker images; docker ps
#           docker kill deleteme_garnet_ci4114 || echo okay

        #
        # local post-checkout working as of build 8583
        #           echo "+++ DEBUG POST-CHECKOUT HOOK"
        #           date; pwd; ls -l .buildkite/hooks/post-checkout || echo no
        #           aha=/var/lib/buildkite-agent/builds/$$BUILDKITE_AGENT_NAME/stanford-aha/aha-flow
        #           ls -l $$aha/.buildkite/hooks/post-checkout || echo no
        #


#       pre-exit: |
#         pwd
#         ls
#         ls -ld temp || echo no
#         ls -laR temp || echo no
# #         chmod +x .buildkite/hooks/pre-exit; ./.buildkite/hooks/pre-exit
# #         source .buildkite/hooks/pre-exit # complains about unbound variable :( ??

          #           # MYTMP=/var/lib/buildkite-agent/builds/tmp/$BUILDKITE_BUILD_NUMBER
          #           # If MYTMP exists, we have valid clone from current build
          #           if [ ! -e $MYTMP ]; then
          #               echo "Build a new MYTMP (prev step built MYTMP on a different machine maybe)"
          #               set -x
          #               git clone $$BUILDKITE_REPO $MYTMP/aha-flow; cd $MYTMP/aha-flow
          #               git checkout $$BUILDKITE_COMMIT || git checkout remotes/origin/no-heroku
          #           fi
          #           echo "Copy aha clone to checkout path so bk will find local post-checkout etc."
          #           set -x
          #           mkdir -p $$BUILDKITE_BUILD_CHECKOUT_PATH
          #           shopt -s dotglob  # Else will not copy dotfiles e.g. .buildkite/hooks :o
          #           cp -rp $MYTMP/aha-flow/* $$BUILDKITE_BUILD_CHECKOUT_PATH

          # NO MORE MYTMP!!!

#           set -x
# 
#           # Want original post-checkout, pre-exit hooks available
#           [ "$$BUILDKITE_BUILD_CHECKOUT_PATH" ] || exit 13 # big trouble if not exists
# 
#           shopt -s dotglob  # Otherwise will not copy dotfiles e.g. .buildkite/hooks :o
# 
#           cp -rp $MYTMP/aha-flow/* $$BUILDKITE_BUILD_CHECKOUT_PATH
# 
# 
#           ls -la $$BUILDKITE_BUILD_CHECKOUT_PATH || echo okay
#           ls -la $$BUILDKITE_BUILD_CHECKOUT_PATH/.buildkite/hook* || echo okay
#           aha=/var/lib/buildkite-agent/builds/$$BUILDKITE_AGENT_NAME/stanford-aha/aha-flow
#           ls -la $$aha/.buildkite/hooks/post-checkout || echo no thats okay
#           ls -la $$aha || echo no thats okay
#           echo "+++ PRE CHECKOUT HOOK, OIT STEP END"

