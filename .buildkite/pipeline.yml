# Agents must have tag docker=true
agents: { docker: true }

env:
  # Default config is "pr_aha"
  CONFIG: ${CONFIG:-pr_aha}

  # RSTEPS: "build gold 0 1 2 3 4 5 6 7 8 9"
  # RSTEPS: "build gold 0 1 2 3"
  RSTEPS: "build gold 0 1 2 3 4 5 6 7 8 9"

  MAX_AGENTS: 4  # How many agents do we get to use for regression steps?

  # "COMMON" is a dir where we can pass information from one step to another
  # FIXME or could use 'set-metadata --build', right?
  COMMON: /var/lib/buildkite-agent/builds/DELETEME-$BUILDKITE_BUILD_NUMBER

  REGRESS_METAHOOKS: $$COMMON/regress-metahooks.sh
  IMAGE: garnet:aha-flow-build-$BUILDKITE_BUILD_NUMBER
  TAG: aha-flow-build-$BUILDKITE_BUILD_NUMBER

steps:

- label: "Launch"
  plugins:
  # Override standard checkout procedure with custom checkout script
  - uber-workflow/run-without-clone:

  # My hooks
  - improbable-eng/metahook:

      # Clone aha repo and optionally update submod according to where build request originated:
      # Req from aha repo:    check out aha commit BUILDKITE_COMMIT
      # Req from submod repo: check out aha master branch, update submod w BUILDKITE_COMMIT
      pre-checkout: |
        echo "+++ BDI PRE CHECKOUT HOOK"
        set +u     # nounset? not on my watch!

        # Clone the aha repo; starting in root dir '/' I think
        echo I am in dir `pwd`
        aha_clone=$BUILDKITE_BUILD_CHECKOUT_PATH;
        set -x
        /bin/rm -rf $$aha_clone; mkdir -p $$aha_clone
        git clone https://github.com/StanfordAHA/aha $$aha_clone; cd $$aha_clone;
        git remote set-url origin https://github.com/StanfordAHA/aha     # Why?
        git clean -ffxdq
        set +x
        bin=$BUILDKITE_BUILD_CHECKOUT_PATH/.buildkite/bin

        if [ "$$AHA_SUBMOD_FLOW_COMMIT" ]; then
            echo 'Submod pull requests use master branch (sometimes overridden by DEV_BRANCH)'
            # (aha-flow steps is responsible for setting DEV_BRANCH)
            # (https://buildkite.com/stanford-aha/aha-flow/settings/steps)
            git checkout $$DEV_BRANCH || echo no dev branch found, continuing with master

            # Make sure env var BUILDKITE_PULL_REQUEST_REPO is set correctly
            source $$bin/update-pr-repo.sh
        else
            echo 'Aha push/PR uses pushed branch'
            git checkout $$BUILDKITE_COMMIT
        fi

        # If build was triggered by a pull request, annotate build with
        #    links pointing to pull request on github.
        # Set REQUEST_TYPE to one of "AHA_PUSH", "AHA_PR", or "SUBMOD_PR"
        # Set PR_REPO_TAIL to submod associated with the PR, e.g. "canal"
        # Add REQUEST_TYPE env temp file for use by later steps
        source $$bin/set-trigfrom-and-reqtype.sh

        ~/bin/status-update --force pending   # Send "pending" status to github PR page

        # Checkout and update correct aha branch and *NOT* submodules
        source $$bin/custom-checkout.sh --aha-flow --early-out

      # Send regression test pass-fail info to github pull request page
      pre-exit: |
        echo "+++ CHECKING EXIT STATUS"; set -x
        echo "Send status to github, delete docker image if job failed"

        # status-update exit status will tell us if this step has failed
        if ! ~/bin/status-update pending; then
            # Build failed already, remove the docker image and begone
            (set -x; docker image rm "$$IMAGE" --no-prune) || echo okay
        fi

  commands:
  - echo "+++ BDI PIPELINE.XML COMMANDS BEGIN"
  - .buildkite/bin/regression-steps.sh $RSTEPS
  - echo "--- BDI PIPELINE.XML COMMANDS END"

########################################################################
# STEP: Cleanup

# Wait for all steps to complete before sending out final status
# This step should run regardless of whether prev steps failed
- wait: { continue_on_failure: true }

- label: "Cleanup"

  # Don't need time-wasting clone just for cleanup! Right?
  plugins:
    - uber-workflow/run-without-clone:

  command: .buildkite/bin/regression-steps.sh --cleanup $RSTEPS
