env:
  CONFIG: ${CONFIG:-daily}
  # FIXME after dev is done, use "master" as default instead of no-heroku
  DEV_BRANCH: remotes/origin/no-heroku

steps:
- label: ":wrench: Build Docker Image"
  # Build the docker image that "Integration Tests" step will use
  key: "docker-build"

  plugins:
  # Override standard checkout procedure with custom checkout script
  - uber-workflow/run-without-clone:
  - improbable-eng/metahook:

      # Must clone aha repo in the pre-checkout phase,
      # so repo-based post-checkout hook will be ready for post-checkout phase.

      pre-checkout: |
        echo "+++ BDI PRE CHECKOUT HOOK BEGIN"
        echo "+++ CD to aha repo clone"
        if ! test -e $$BUILDKITE_BUILD_CHECKOUT_PATH/.git; then
            echo "No aha clone in checkout dir (yet); I will build one"
            mkdir -p $$BUILDKITE_BUILD_CHECKOUT_PATH
            git clone $$BUILDKITE_REPO $$BUILDKITE_BUILD_CHECKOUT_PATH
        fi
        echo "--- Check out appropriate AHA branch: $BUILDKITE_COMMIT, $AHA_DEFAULT_BRANCH, or master"
        if expr "$$BUILDKITE_MESSAGE" : "PR from "; then BUILDKITE_COMMIT=$$FLOW_HEAD_SHA; fi
        cd $$BUILDKITE_BUILD_CHECKOUT_PATH
        echo 'git checkout -qf $$BUILDKITE_COMMIT || git checkout -qf $$DEV_BRANCH || git checkout -qf master'; set -x
              git checkout -qf $$BUILDKITE_COMMIT || git checkout -qf $$DEV_BRANCH || git checkout -qf master
        set +x

        echo "--- DEBUG DOCKER TRASH"; set -x
        docker images; docker ps
        # docker kill deleteme_garnet_ci4114 || echo okay
        set +x

        echo "--- CHECKOUT FULL REPO, submodules and all"
        source .buildkite/bin/custom-checkout.sh

        echo "--- BDI PRE CHECKOUT HOOK END"

      pre-exit: |
        s=$$BUILDKITE_COMMAND_EXIT_STATUS || s=99
        echo "+++ exit code=$$s"
        env

  commands:
  - echo "+++ BDI PIPELINE.XML COMMANDS BEGIN"
  - exit 13

  - echo "--- Creating garnet Image"
  - docker build . -t "garnet:$BUILDKITE_COMMIT"
  # Docker image successfully built, clear out .TEST file to avoid
  # reporting failure to aha-flow-app.

  # Clear out .TEST file to avoid reporting failure to aha-flow-app. This is a heroku thing I guess.
  # FIXME remove heroku, remove this, along with pre-exit and post-checkout hooks
  - rm -rf temp/.TEST

  - echo "--- Pruning Docker Images"
  - yes | docker image prune -a --filter "until=6h" --filter=label='description=garnet' || true

  - echo "--- BDI PIPELINE.XML COMMANDS END"

  agents:
    docker: true

- label: ":hammer: Amber Gold RTL"
  key: "goldcheck-amber"
  depends_on: "docker-build"
  commands:
  - set -x; /aha/aha/bin/rtl-goldcheck.sh amber
  plugins:
    - uber-workflow/run-without-clone: # skip-checkout (below) does not suffice!
    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT
        volumes:
          - "/cad/:/cad"
          - "./temp:/buildkite:rw"
        # skip-checkout: true
        mount-checkout: false
        propagate-environment: true
        environment:
          - CONFIG
          - FLOW_REPO
        shell: ["/bin/bash", "-e", "-c"]
  agents:
    docker: true


- label: ":hammer: Onyx Integration Tests"
  key: "integration-tests"
  depends_on: "docker-build"

  plugins:
    - uber-workflow/run-without-clone: # skip-checkout alone (below) did not do the trick!
    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT
        # image: stanfordaha/garnet:latest
        volumes:
          - "/cad/:/cad"
          - "./temp:/buildkite:rw"
        mount-checkout: false
        skip-checkout: true
        propagate-environment: true
        environment:
          - CONFIG
          - FLOW_REPO
        shell: ["/bin/bash", "-e", "-c"]
    - improbable-eng/metahook:

        pre-checkout: |
          set +x
          echo "+++ PRE CHECKOUT HOOK, OIT STEP BEGIN"

          echo "+++ CD to aha repo clone"
          if ! test -e $$BUILDKITE_BUILD_CHECKOUT_PATH/.git; then
              echo "No aha clone in checkout dir (yet); I will build one"
              mkdir -p $$BUILDKITE_BUILD_CHECKOUT_PATH
              git clone $$BUILDKITE_REPO $$BUILDKITE_BUILD_CHECKOUT_PATH
          fi
          echo "--- Check out appropriate AHA branch: $BUILDKITE_COMMIT, $AHA_DEFAULT_BRANCH, or master"
          if expr "$$BUILDKITE_MESSAGE" : "PR from "; then BUILDKITE_COMMIT=$$FLOW_HEAD_SHA; fi
          cd $$BUILDKITE_BUILD_CHECKOUT_PATH
          echo 'git checkout $$BUILDKITE_COMMIT || git checkout $$DEV_BRANCH || git checkout master'; set -x
                git checkout $$BUILDKITE_COMMIT || git checkout $$DEV_BRANCH || git checkout master
          set +x
          echo "--- PRE CHECKOUT HOOK, OIT STEP END"

        pre-command: |
          # Cannot run this as part of pre-checkout, because post-checkout removes temp dir :o
          echo "+++ PRE COMMAND HOOK, OIT STEP BEGIN"
          echo "Use file 'DO_PR' as a signal to do pr tests or not omg"
          ap=`eval echo $$AHA_PUSHPULL`
          if buildkite-agent artifact download $$ap . ; then
              /bin/rm -rf temp/DO_PR
              echo "+++ DO_PR UNSET (FALSE)"
          else
              mkdir -p temp; touch temp/DO_PR
              echo "+++ DO_PR SET (TRUE)"
          fi
          pwd
          test -e temp/DO_PR && echo FOO temp/DO_PR exists || echo FOO temp/DO_PR not exists
          echo "--- PRE COMMAND HOOK, OIT STEP END"

  commands:
  - |
    if test -e /buildkite/DO_PR; then
        echo "--- DO_PR SET (TRUE)"
    else
        echo "--- DO_PR UNSET (FALSE)"
    fi
  - source /aha/bin/activate
  - source /cad/modules/tcl/init/sh
  - module load base incisive xcelium/19.03.003 vcs/Q-2020.03-SP2
  # make /bin/sh symlink to bash instead of dash:
  - echo "dash dash/sh boolean false" | debconf-set-selections
  - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
  - apt update
  - apt install time
  - ls /aha
  - pip freeze
  - (cd garnet && echo "garnet" && git rev-parse --verify HEAD)
  # Run regression tests
  # - if [[ $$FLOW_REPO ]]; then
  # - if buildkite-agent artifact download $$AHA_PUSHPULL . ; then
  # - if [ "$$DO_PR" == "true" ]; then
  - if test -e /buildkite/DO_PR; then
      echo "Trigger came from submod repo pull request; use pr config";
      export CONFIG=pr;
    else
      echo "Trigger came from aha repo; use default config";
    fi;
  - aha regress $$CONFIG
  # We report success to the aha-flow app by removing the .TEST file,
  # which is created in the post-checkout hook and checked for in the
  # pre-exit hook.

  # Okay to remove or check but DO NOT CREATE anything in /buildkite, it is owned by root :(
  - echo "--- Removing Failure Canary"
  - ls -al /buildkite
  - rm -rf /buildkite/.TEST
  - ls -al /buildkite

  agents:
    docker: true

# BOOKMARK cleanup

# FIXME does docker image get removed even when dependence(s) fail?
- label: ":skull_and_crossbones: Delete Docker Image"
  depends_on:
  - "integration-tests"
  - "goldcheck-amber"
  commands:
  # '--no-prune' so it doesn't prune dangling images, we want to use
  # them for the Docker cache.
  - docker image rm "garnet:$BUILDKITE_COMMIT" --no-prune
  agents:
    docker: true
  plugins:
  - uber-workflow/run-without-clone:
